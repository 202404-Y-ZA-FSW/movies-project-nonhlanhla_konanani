{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Recode\\\\movies-project-nonhlanhla_konanani\\\\movie-project\\\\src\\\\Pages\\\\Actors.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchPopularActors } from '../util/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Actors = () => {\n  _s();\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        const response = await fetchPopularActors();\n        setActors(response.results || []);\n      } catch (error) {\n        console.error(\"Error fetching actors:\", error);\n      }\n    };\n    fetchActors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Popular Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actors-grid\",\n      children: actors.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actor-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/actors/${actor.id}`,\n          children: [actor.profile_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n            alt: actor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No picture available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: actor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, actor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Actors, \"ABf0y2MdAYXvVYadn0M0Di6JqiA=\");\n_c = Actors;\nexport default Actors;\nvar _c;\n$RefreshReg$(_c, \"Actors\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchPopularActors","jsxDEV","_jsxDEV","Actors","_s","actors","setActors","fetchActors","response","results","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","actor","to","id","profile_path","src","alt","name","_c","$RefreshReg$"],"sources":["C:/Users/User/Recode/movies-project-nonhlanhla_konanani/movie-project/src/Pages/Actors.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchPopularActors } from '../util/API';\r\n\r\nconst Actors = () => {\r\n  const [actors, setActors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchActors = async () => {\r\n      try {\r\n        const response = await fetchPopularActors();\r\n        setActors(response.results || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching actors:\", error);\r\n      }\r\n    };\r\n\r\n    fetchActors();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Popular Actors</h1>\r\n      <div className=\"actors-grid\">\r\n        {actors.map((actor) => (\r\n          <div key={actor.id} className=\"actor-card\">\r\n            <Link to={`/actors/${actor.id}`}>\r\n              {actor.profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                  alt={actor.name}\r\n                />\r\n              ) : (\r\n                <p>No picture available</p>\r\n              )}\r\n              <h2>{actor.name}</h2>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,kBAAkB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,kBAAkB,CAAC,CAAC;QAC3CM,SAAS,CAACE,QAAQ,CAACC,OAAO,IAAI,EAAE,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBd,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAL,QAAA,EACzBP,MAAM,CAACa,GAAG,CAAEC,KAAK,iBAChBjB,OAAA;QAAoBe,SAAS,EAAC,YAAY;QAAAL,QAAA,eACxCV,OAAA,CAACH,IAAI;UAACqB,EAAE,EAAE,WAAWD,KAAK,CAACE,EAAE,EAAG;UAAAT,QAAA,GAC7BO,KAAK,CAACG,YAAY,gBACjBpB,OAAA;YACEqB,GAAG,EAAE,kCAAkCJ,KAAK,CAACG,YAAY,EAAG;YAC5DE,GAAG,EAAEL,KAAK,CAACM;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC,gBAEFd,OAAA;YAAAU,QAAA,EAAG;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAC3B,eACDd,OAAA;YAAAU,QAAA,EAAKO,KAAK,CAACM;UAAI;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB;MAAC,GAXCG,KAAK,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtCID,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
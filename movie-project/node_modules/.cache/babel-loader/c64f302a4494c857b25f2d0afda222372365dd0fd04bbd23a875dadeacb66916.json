{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = 'e5bee31cf0d4f485f077a15a1474531e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const fetchGenres = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch genres:\", error);\n    throw error;\n  }\n};\nexport const fetchPopularActors = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/person/popular`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch actors:\", error);\n    throw error;\n  }\n};\nexport const fetchSearchResults = async query => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/multi`, {\n      params: {\n        api_key: API_KEY,\n        query\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch search results:\", error);\n    throw error;\n  }\n};\nexport const fetchMovies = async endpoint => {\n  try {\n    const response = await axios.get(`${BASE_URL}${endpoint}`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch movies:\", error);\n    throw error;\n  }\n};\nexport const fetchActorDetails = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/person/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'movie_credits'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch actor details:\", error);\n    throw error;\n  }\n};\nexport const fetchRelatedMovies = async id => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${id}/similar`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Failed to fetch related movies:\", error);\n    throw error;\n  }\n};\nexport const fetchCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY\n      }\n    });\n    return response.data.cast || [];\n  } catch (error) {\n    console.error(\"Error fetching movie credits:\", error);\n    return [];\n  }\n};\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'credits,videos'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching movie details:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_KEY","BASE_URL","fetchGenres","response","get","params","api_key","data","error","console","fetchPopularActors","fetchSearchResults","query","fetchMovies","endpoint","fetchActorDetails","id","append_to_response","fetchRelatedMovies","fetchCredits","movieId","cast","fetchMovieDetails"],"sources":["C:/Users/User/Recode/movies-project-nonhlanhla_konanani/movie-project/src/util/API.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'e5bee31cf0d4f485f077a15a1474531e';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const fetchGenres = async () => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/genre/movie/list`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch genres:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchPopularActors = async () => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/person/popular`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch actors:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchSearchResults = async (query) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/search/multi`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        query,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch search results:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchMovies = async (endpoint) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}${endpoint}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch movies:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchActorDetails = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/person/${id}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        append_to_response: 'movie_credits',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch actor details:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchRelatedMovies = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/movie/${id}/similar`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch related movies:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCredits = async (movieId) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n      },\r\n    });\r\n    return response.data.cast || [];\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie credits:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const fetchMovieDetails = async (movieId) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        append_to_response: 'credits,videos',\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching movie details:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
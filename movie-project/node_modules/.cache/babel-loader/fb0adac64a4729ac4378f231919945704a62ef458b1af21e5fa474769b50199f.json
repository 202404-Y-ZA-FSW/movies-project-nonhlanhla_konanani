{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Recode\\\\movies-project-nonhlanhla_konanani\\\\movie-project\\\\src\\\\Pages\\\\SingleMovie.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails, fetchRelatedMovies, fetchCredits, fetchMovieVideos } from '../util/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleMovie = modieId => {\n  _s();\n  var _movie$credits$crew$f;\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [relatedMovies, setRelatedMovies] = useState([]);\n  const [credits, setCredits] = useState([]);\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const fetchDetails = async () => {\n      const response = await fetchMovieDetails(id);\n      setMovie(response);\n    };\n    const fetchRelated = async () => {\n      const response = await fetchRelatedMovies(id);\n      setRelatedMovies(response.results || []);\n    };\n    const fetchMovieCredits = async () => {\n      const response = await fetchCredits(id);\n      setCredits(response.cast.slice(0, 5));\n    };\n    const fetchMovieVideos = async () => {\n      const response = await fetchMovieVideos(id);\n      setVideos(response.results);\n    };\n    fetchDetails();\n    fetchRelated();\n    fetchMovieCredits();\n    fetchMovieVideos();\n  }, [id]);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Release Date: \", movie.release_date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Runtime: \", movie.runtime, \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Language: \", movie.original_language]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", movie.vote_average, \" (\", movie.vote_count, \" votes)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Director: \", (_movie$credits$crew$f = movie.credits.crew.find(member => member.job === 'Director')) === null || _movie$credits$crew$f === void 0 ? void 0 : _movie$credits$crew$f.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overview: \", movie.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: credits.map(actor => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: actor.name\n      }, actor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Related Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: relatedMovies.map(relatedMovie => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: relatedMovie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/movies/${relatedMovie.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${relatedMovie.poster_path}`,\n            alt: relatedMovie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, relatedMovie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Trailer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), videos.length > 0 && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"trailer\",\n      width: \"560\",\n      height: \"315\",\n      src: `https://www.youtube.com/embed/${videos[0].key}`,\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Production Companies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movie.production_companies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500${company.logo_path}`,\n          alt: company.name,\n          style: {\n            width: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: company.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleMovie, \"EYP/r+myDR/2bTBsQr3vwyVR3ns=\", false, function () {\n  return [useParams];\n});\n_c = SingleMovie;\nexport default SingleMovie;\nvar _c;\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchMovieDetails","fetchRelatedMovies","fetchCredits","fetchMovieVideos","jsxDEV","_jsxDEV","SingleMovie","modieId","_s","_movie$credits$crew$f","id","movie","setMovie","relatedMovies","setRelatedMovies","credits","setCredits","videos","setVideos","fetchDetails","response","fetchRelated","results","fetchMovieCredits","cast","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","title","src","poster_path","alt","release_date","runtime","original_language","vote_average","vote_count","crew","find","member","job","name","overview","map","actor","relatedMovie","href","length","width","height","key","allowFullScreen","production_companies","company","logo_path","style","_c","$RefreshReg$"],"sources":["C:/Users/User/Recode/movies-project-nonhlanhla_konanani/movie-project/src/Pages/SingleMovie.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieDetails, fetchRelatedMovies, fetchCredits, fetchMovieVideos } from '../util/API';\r\n\r\nconst SingleMovie = (modieId) => {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [relatedMovies, setRelatedMovies] = useState([]);\r\n  const [credits, setCredits] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      const response = await fetchMovieDetails(id);\r\n      setMovie(response);\r\n    };\r\n\r\n    const fetchRelated = async () => {\r\n      const response = await fetchRelatedMovies(id);\r\n      setRelatedMovies(response.results || []);\r\n    };\r\n\r\n    const fetchMovieCredits = async () => {\r\n      const response = await fetchCredits(id);\r\n      setCredits(response.cast.slice(0, 5));\r\n    };\r\n\r\n    const fetchMovieVideos = async () => {\r\n      const response = await fetchMovieVideos(id);\r\n      setVideos(response.results);\r\n    };\r\n\r\n    fetchDetails();\r\n    fetchRelated();\r\n    fetchMovieCredits();\r\n    fetchMovieVideos();\r\n  }, [id]);\r\n\r\n  if (!movie) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{movie.title}</h1>\r\n      <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n      <p>Release Date: {movie.release_date}</p>\r\n      <p>Runtime: {movie.runtime} minutes</p>\r\n      <p>Language: {movie.original_language}</p>\r\n      <p>Rating: {movie.vote_average} ({movie.vote_count} votes)</p>\r\n      <p>Director: {movie.credits.crew.find(member => member.job === 'Director')?.name}</p>\r\n      <p>Overview: {movie.overview}</p>\r\n      <h2>Cast</h2>\r\n      <ul>\r\n        {credits.map((actor) => (\r\n          <li key={actor.id}>{actor.name}</li>\r\n        ))}\r\n      </ul>\r\n      <h2>Related Movies</h2>\r\n      <div>\r\n        {relatedMovies.map((relatedMovie) => (\r\n          <div key={relatedMovie.id}>\r\n            <h3>{relatedMovie.title}</h3>\r\n            <a href={`/movies/${relatedMovie.id}`}>\r\n              <img src={`https://image.tmdb.org/t/p/w500${relatedMovie.poster_path}`} alt={relatedMovie.title} />\r\n            </a>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <h2>Trailer</h2>\r\n      {videos.length > 0 && (\r\n        <iframe\r\n          title=\"trailer\"\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src={`https://www.youtube.com/embed/${videos[0].key}`}\r\n          allowFullScreen\r\n        />\r\n      )}\r\n      <h2>Production Companies</h2>\r\n      <div>\r\n        {movie.production_companies.map((company) => (\r\n          <div key={company.id}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500${company.logo_path}`}\r\n              alt={company.name}\r\n              style={{ width: '100px' }}\r\n            />\r\n            <p>{company.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMovie;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
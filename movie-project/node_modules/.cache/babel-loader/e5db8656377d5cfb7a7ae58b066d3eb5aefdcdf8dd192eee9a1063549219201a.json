{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Recode\\\\movies-project-nonhlanhla_konanani\\\\movie-project\\\\src\\\\Pages\\\\Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchMovies } from '../util/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchCategoryMovies = async () => {\n      let endpoint;\n      switch (category) {\n        case 'top-rated':\n          endpoint = '/movie/top_rated';\n          break;\n        case 'popular':\n          endpoint = '/movie/popular';\n          break;\n        case 'latest':\n          endpoint = '/movie/latest';\n          break;\n        case 'now-playing':\n          endpoint = '/movie/now_playing';\n          break;\n        case 'upcoming':\n          endpoint = '/movie/upcoming';\n          break;\n        default:\n          endpoint = '/movie/popular';\n      }\n      try {\n        const response = await fetchMovies(endpoint);\n        setMovies(response.results || []);\n      } catch (error) {\n        console.error(\"Error fetching movies:\", error);\n      }\n    };\n    fetchCategoryMovies();\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: category.replace(\"-\", \" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movies/${movie.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"CJlHCFa62M/wVstkFfLFtE/Oag4=\", false, function () {\n  return [useParams];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","fetchMovies","jsxDEV","_jsxDEV","Movies","_s","category","movies","setMovies","fetchCategoryMovies","endpoint","response","results","error","console","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","className","map","movie","to","id","src","poster_path","alt","title","_c","$RefreshReg$"],"sources":["C:/Users/User/Recode/movies-project-nonhlanhla_konanani/movie-project/src/Pages/Movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { fetchMovies } from '../util/API';\r\n\r\nconst Movies = () => {\r\n  const { category } = useParams();\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCategoryMovies = async () => {\r\n      let endpoint;\r\n      switch (category) {\r\n        case 'top-rated':\r\n          endpoint = '/movie/top_rated';\r\n          break;\r\n        case 'popular':\r\n          endpoint = '/movie/popular';\r\n          break;\r\n        case 'latest':\r\n          endpoint = '/movie/latest';\r\n          break;\r\n        case 'now-playing':\r\n          endpoint = '/movie/now_playing';\r\n          break;\r\n        case 'upcoming':\r\n          endpoint = '/movie/upcoming';\r\n          break;\r\n        default:\r\n          endpoint = '/movie/popular';\r\n      }\r\n\r\n      try {\r\n        const response = await fetchMovies(endpoint);\r\n        setMovies(response.results || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching movies:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCategoryMovies();\r\n  }, [category]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{category.replace(\"-\", \" \")}</h2>\r\n      <div className=\"movies-grid\">\r\n        {movies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-card\">\r\n            <Link to={`/movies/${movie.id}`}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n              <h3>{movie.title}</h3>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAS,CAAC,GAAGN,SAAS,CAAC,CAAC;EAChC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAIC,QAAQ;MACZ,QAAQJ,QAAQ;QACd,KAAK,WAAW;UACdI,QAAQ,GAAG,kBAAkB;UAC7B;QACF,KAAK,SAAS;UACZA,QAAQ,GAAG,gBAAgB;UAC3B;QACF,KAAK,QAAQ;UACXA,QAAQ,GAAG,eAAe;UAC1B;QACF,KAAK,aAAa;UAChBA,QAAQ,GAAG,oBAAoB;UAC/B;QACF,KAAK,UAAU;UACbA,QAAQ,GAAG,iBAAiB;UAC5B;QACF;UACEA,QAAQ,GAAG,gBAAgB;MAC/B;MAEA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACS,QAAQ,CAAC;QAC5CF,SAAS,CAACG,QAAQ,CAACC,OAAO,IAAI,EAAE,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKT,QAAQ,CAACU,OAAO,CAAC,GAAG,EAAE,GAAG;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrCjB,OAAA;MAAKkB,SAAS,EAAC,aAAa;MAAAN,QAAA,EACzBR,MAAM,CAACe,GAAG,CAAEC,KAAK,iBAChBpB,OAAA;QAAoBkB,SAAS,EAAC,YAAY;QAAAN,QAAA,eACxCZ,OAAA,CAACJ,IAAI;UAACyB,EAAE,EAAE,WAAWD,KAAK,CAACE,EAAE,EAAG;UAAAV,QAAA,gBAC9BZ,OAAA;YACEuB,GAAG,EAAE,kCAAkCH,KAAK,CAACI,WAAW,EAAG;YAC3DC,GAAG,EAAEL,KAAK,CAACM;UAAM;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFjB,OAAA;YAAAY,QAAA,EAAKQ,KAAK,CAACM;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC,GAPCG,KAAK,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CAxDID,MAAM;EAAA,QACWJ,SAAS;AAAA;AAAA8B,EAAA,GAD1B1B,MAAM;AA0DZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
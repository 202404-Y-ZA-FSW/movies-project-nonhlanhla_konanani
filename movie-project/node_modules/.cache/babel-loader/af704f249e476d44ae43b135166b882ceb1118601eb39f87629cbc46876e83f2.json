{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Recode\\\\movies-project-nonhlanhla_konanani\\\\movie-project\\\\src\\\\Pages\\\\SingleActor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchActorDetails } from '../util/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleActor = () => {\n  _s();\n  var _actor$movie_credits;\n  const {\n    id\n  } = useParams();\n  const [actor, setActor] = useState(null);\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const response = await fetchActorDetails(id);\n        setActor(response);\n      } catch (error) {\n        console.error(\"Error fetching actor details:\", error);\n      }\n    };\n    fetchDetails();\n  }, [id]);\n  if (!actor) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: actor.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), actor.profile_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n      alt: actor.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No picture available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Gender:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), \" \", actor.gender === 1 ? 'Female' : 'Male']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Popularity:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), \" \", actor.popularity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Birthday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", actor.birthday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Biography:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), \" \", actor.biography]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (_actor$movie_credits = actor.movie_credits) === null || _actor$movie_credits === void 0 ? void 0 : _actor$movie_credits.cast.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleActor, \"KRgsvXk9Me0NJ+jAFmAHtrkFRvE=\", false, function () {\n  return [useParams];\n});\n_c = SingleActor;\nexport default SingleActor;\nvar _c;\n$RefreshReg$(_c, \"SingleActor\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchActorDetails","jsxDEV","_jsxDEV","SingleActor","_s","_actor$movie_credits","id","actor","setActor","fetchDetails","response","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","profile_path","src","alt","gender","popularity","birthday","biography","movie_credits","cast","map","movie","title","_c","$RefreshReg$"],"sources":["C:/Users/User/Recode/movies-project-nonhlanhla_konanani/movie-project/src/Pages/SingleActor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchActorDetails } from '../util/API';\r\n\r\nconst SingleActor = () => {\r\n  const { id } = useParams();\r\n  const [actor, setActor] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      try {\r\n        const response = await fetchActorDetails(id);\r\n        setActor(response);\r\n      } catch (error) {\r\n        console.error(\"Error fetching actor details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchDetails();\r\n  }, [id]);\r\n\r\n  if (!actor) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{actor.name}</h1>\r\n      {actor.profile_path ? (\r\n        <img src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`} alt={actor.name} />\r\n      ) : (\r\n        <p>No picture available</p>\r\n      )}\r\n      <p><strong>Gender:</strong> {actor.gender === 1 ? 'Female' : 'Male'}</p>\r\n      <p><strong>Popularity:</strong> {actor.popularity}</p>\r\n      <p><strong>Birthday:</strong> {actor.birthday}</p>\r\n      <p><strong>Biography:</strong> {actor.biography}</p>\r\n      <h2>Movies</h2>\r\n      <ul>\r\n        {actor.movie_credits?.cast.map((movie) => (\r\n          <li key={movie.id}>\r\n            <p>{movie.title}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleActor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}